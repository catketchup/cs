#+STARTUP: indent
Emacs note
* problems
- emacs/ein markdown latex equations
- transplant emacs;// 
- yilun's extension; 
- open website in emacs, eww/Xwidget Webkit 
- install an exention without using emacs
- sougou input and emacs
- centaur emacs github
* log
** 08/2019
08/
- c-c j: go to function in the repository
- c-c f: go to function in the file
- c-x n ...: narrow
- c-j: enter
- c-': multicusor
- c-;: backspace
- electric pair mode
- show paren mode
- smartparen mode   
- doom-theses
- doom-modeline
- defun move-bottom-subtree: c-x c-j
- emacs/scratch: c-c s
- ein mode
- ein markdown

08/28
- doom-nova theme
- beacon mode
- magic-latex-buffer

** 09/2019
09/08,09,10,11,12,13,15
- ?: latex display buffer; cmu guy, 
- ?: German input? extension package load;
- org source code;

- emacs configuration, munen; from helm to ivy, swiper, abo-abo; 

- ?: eshell shortkey? 
- describe-function; run shell scripts in emacs(query?);

- ?: shell-script mode pass parameter

09/15
- configured emacs on the old laptop;
- ?: Centaur emacs; require and install;

09/16,17,18,20,22,23,26
- Centaur emacs; rgrep; provide;

- people; 

- python-mode; dired; read-only;

- centaur, anaconda mode; problems;

- sogou input in emacs; backspace, M-,;cl

- irc;
- ?:ein-mode plot pop up;
- ?:lpy-mode; .el file read only; errors; github;  configuration; kill buffers;
- ?:startup page fo centaur; auto log in circe; summary on how to debug in emacs;
** 02/2020
02/15
- PDFView

02/29
- changed centaur-theme to be "default" in custom.el
- commented out "circe"

* topics1
** keys
- https://www.emacswiki.org/emacs/EmacsNewbieKeyReference
** move cursor
- c-f: forward one character
- c-b: backward one character
- c-n: down one screen line
- c-p: up one screen line
- c-a: the begining of the line
- c-e: the end of the line

- m-f: forward one word
- m-b: backward one word
- c-c c-p: move up to the closest entry
- c-c c-n: move down to the closest entry
- c-c c-u: move up to the parent heading
- c-c c-f: move forward to the next heading at the same level

- c-v: page down
- m-v: page up
- m-s->: to the top of the file
- m-s-<: to the bottom of the file

- m-x: emacs command
- c-o: switch in the emacs command region
** text
- c-w: cut the text
- m-w: copy the text
- c-k: kill a line
- c-y: paste the text
- c-d: delete
- c-/: undo
- c-s: search
- c-e: export
- select multi lines C-u 8 C-x Tab: indent the reigion by 8 spaces, -8 for indent backward
- C-{: iedit-mode, multicusor and edit
** buffer
- c-x b: go to a buffer
- c-x k: kill the buffer
- c-x d: kill the buffer in the command place
** file
- c-x c-f: find files
- c-x c-s: save the file
- c-x c-b: buffer list
- c-x b: move to another buffer
- c-x c: exit
** frame 
- c-x 3: left/right split
- c-x 2: up/down split
- c-x 0: close the current frame
- c-x 1: maximize the current frame
- c-x o: go to the other frame
** link
- c-c l: capture link
- c-c c-l: insert link
- c-c c-o: open the link
** functions
- use scratch to run code temperal
- c-h k: show the function of a key(m-x describe-key)
- c-h f: (m-x describe-function)
- comment or uncomment
- comment box
- read pdf and make note: 
- IRC 
** lisp
** eshell
- https://www.masteringemacs.org/article/complete-guide-mastering-eshell
** help
-
** extensions and modes
- find the source codes in ~/.emacs.d/elpa/ 
*** installation list
- helm 
- company 
- magit
- electric pair mode
- show paren mode
- smartparen mode   
- doom-theses
- doom-modelines
- scratch
- magic-latex-buffer
- beacon
- ivy/counsel/swiper
*** melpa
- https://blog.csdn.net/sjhuangx/article/details/51252522
- package-initialize
- update: M-x package-refresh-contents
*** configuration: 
- https://www.cnblogs.com/morole/p/9965685.html
- https://github.com/munen/emacs.d (very good configuration example)
- installed parts of extension recommanded by him
*** hook
*** helm
*** Magit
- c-x g: open Magit
- s: stage files
- c c: commit and make comment
- c-c c-c: complete commit
- P u: push to the remote orgin
*** company
*** yas-snippet
*** py-autopep8: https://github.com/paetzke/py-autopep8.el
*** linum(show line numbers):
- http://ergoemacs.org/emacs/emacs_line_number_mode.html
*** ein: run jupyter notebook in emacs
- ein:jupyter-server-start
- ein:stop
- C-u-c-b/a: add markdown
**** images don't pop up
M-x customize-group RET ein
Ein:Output Area Inlined Images
**** auto-complete
o(add-hook 'ein:notebook-mode-hook #'anaconda-mode)

  (defun user-ein-reply-callback (args content -metadata-not-used-)
    (let ((callback (plist-get args :callback))
          (candidates (plist-get content :matches)))
      (funcall callback candidates)))

  (defun user-company-ein-callback (callback)
    (ein:kernel-complete
     (ein:get-kernel)
     (thing-at-point 'line)
     (current-column)
     (list :complete_reply
           (cons #'user-ein-reply-callback (list :callback callback))))
    )

  (defun user-company-ein-backend (command &optional arg &rest ignored)
    (interactive (list 'interactive))
    (case command
      (interactive (company-begin-backend 'user-company-ein-backend))
      (prefix (company-anaconda-prefix))
      (candidates (cons :async #'user-company-ein-callback))
      (location nil)
      (sorted t)
      )
    )

*** evil
*** elpy
*** flycheck
*** sphinx-doc: https://github.com/naiquevin/sphinx-doc.el
*** counsel
*** browse and tag code: https://zhuanlan.zhihu.com/p/67312736

*** ivy
*** GNU global
*** ggtags: https://github.com/leoliu/ggtags
*** ctags? 
*** grep?
*** Speedbar: browse source tree
- SPC: open the children of a node
- RET: open the node
- U: go up parent directory 
- n or p: move to next or previous node
- m-p or m-p: move to next or previous node at the current level
- b: switch to buffer list using Speedbar presentation
- f: switch back to file list
*** sr-speedbar
*** pyim: https://github.com/tumashu/pyim
*** projectile
- https://github.com/bbatsov/projectile
- https://projectile.readthedocs.io/en/latest/usage/: usage
*** python mode
- https://realpython.com/emacs-the-best-python-editor/
- c-c c-p: open process windowm
- c-c c-c: run python file
- python mode command: https://stackoverflow.com/questions/25669809/how-do-you-run-python-code-using-emacs
- C-c-j jump to def/class
- C-c-f find file
*** elpy mode(python)
C-c C-d: go to docstring
M-.: navigate to defination
C-c C-z: navigate to Ipython
C-c C-f: elpy find files
*** c/c++ mode
good configuration: https://nilsdeppe.com/posts/emacs-c++-ide2
cc mode
c++ mode https://www.emacswiki.org/emacs/CPlusPlusMode
https://tuhdo.github.io/c-ide.html configuration tutorial, very comprehensive
https://emacs.stackexchange.com/questions/801/how-to-get-intelligent-auto-completion-in-c auto-completion
- M-.
- M-t
- M-,
- enable irony mode?
- enable lsp-mode
- project-find-file/projectile-find-file
**** GUN GLOBAL
global to generate tag, rtag and path files
**** tag and rtag
tag for the working directory 
rtag for the whole repository
**** helm-gtags
https://github.com/emacsorphanage/helm-gtags
helm-gtags.el is GNU Global helm interface
should install helm and GMU Global at first
generate ctags 

**** ggtags
https://github.com/leoliu/ggtags
Emacs frontend to GNU Global source code tagging system

**** ctags, etags, gtags
http://xahlee.info/comp/ctags_etags_gtags.html
ctags is a shell command. Run it to create a index file, then you can use command to quickly jump to a identifier (function)'s definition. 

using grep is much slower

variations: ctags, etags, gtags(GNU Global)
- ctags: classic tool
- etags: from emacs
- gtags: GNU Global from GNU, with command name gtags and global
use man ... to check them

gtags
- gtags: generate index file
- global: locate identifiers

**** clang-format and clang-format+
**** irony 
https://github.com/Sarcasm/irony-mode
**** company-irony
**** company-c-headers
**** company-irony-c-headers
https://github.com/hotpxl/company-irony-c-headers
It must be loaded after irony-mode, while the backend should be grouped with company-irony, and before it.
Put the following code in your initialization script:
*** java mode
*** shell-script mode
- c-c c-x execute script
*** javascript mode
*** tex mode
*** gnu global and emacs
- https://www.cnblogs.com/elvalad/p/4069656.html
- https://www.gnu.org/software/global/download.html
- https://www.cnblogs.com/elvalad/p/4069656.html
- https://blog.csdn.net/gatieme/article/details/78819740
*** browser
- https://www.emacswiki.org/emacs/BrowseUrl
*** miscellaneous
*** theme
*** latex
1.C-c C-c and choose latex compiler and compile
2.C-c C-c and choose bibtex to compile the .bib file
3.compile for another 2 times
*** sql mode

* org mode
** org-latex-fragment
- c-c c-x c-l: show equation, toggle tex fragment
- c-c c-c: hide equation
- c-c c-e l l: Export as LaTeX file myfile.tex
- C-c C-e l p: Export as LaTeX and then process to PDF
- C-c C-e l o: Export as LaTeX and then process to PDF, then open the resulting PDF file
- C-c C-c: run python block in org
- [[file_name]]: with [[, C-c C-x C-v: org-toggle-inline-images 
- (setq org-image-actual-width 400) inline image size
** org html
https://github.com/guanyilun/snippets Yilun's org template
https://github.com/gongzhitaao/orgcss template
https://gongzhitaao.org/orgcss/ template
* topics2
** dired(file manager)
** eshell
** upgrade emacs
- sudo apt remove --autoremove emacs26 emacs26-nox: remove emacs
- sudo add-apt-repository ppa:kelleyk/emacs
- sudo apt upgrade
- sudo apt install emacs26
- sudo apt remove --autoremove emacs26 emacs26-nox
** from helm to ivy 
- https://sam217pa.github.io/2016/09/13/from-helm-to-ivy/#fn:2
** read-only-mode
- read-only-mode
- revert-buffer
- 
** PDFView
- C-c C-c: view pdf
** sogou input
export LC_CTYPE=zh_CN.UTF-8
export PATH="/home/ketchup/tools/anaconda3/bin:$PATH"
** German input 
*** german-postfix
| ae  -> ä
| aee -> ae
| oe  -> ö
| oee -> oe
| ue  -> ü (not after a/e/q)
| uee -> ue
| sz  -> ß
| szz -> sz
* people
** Linus Torvalds
** Richard Stallman
- founder of the GNU Project and author of GNU Emacs
** manateelazycat(王勇)
- https://manateelazycat.github.io/index.html
- 
** Vincent Zhang
** important hakers
- https://manateelazycat.github.io/emacs/2019/05/12/emacs-hackers.html

* centaur emacs
- https://github.com/seagle0128/.emacs.d (centaur emacs, Vincent Zhang)
- init-swiper
- wrap 
- backspace C-; 
- backup-directory-alist 
- turn on/off flyspell/flycheck
- ansi-term: line mode and character mode
- magic-latex 
- German input
- youdao
- show-paren-mode
- emacs client

python-mode
- auto-pep8//yapf
- anaconda, python version
- setq and config

- ?: babel
- ?: config read-only mode and hooks
- ?: remind the routines in the modules
- ?: swiper cursor

- ?: sphinx-doc
- ?: multicusor
- ?: auto-complete
- ?: projectile
- ?: python functionality
- ?: ein mode: can't open ipynb
- ?: anaconda-mode
- 

- ?: sogou Chinese input
- ?: org-mode latex preview
- ?: font size

* EAF 
emacs-application-framework
by manateelazycat(王勇)
https://github.com/manateelazycat/emacs-application-framework

-? eaf-open-browser doesn't work
-? default pdf viewer, color, highlight
* how to debug in emacs?
- scratch
- message
- rgrep key words
- find the function definations
[must read the docs and comments carefully]
- ask yilun
- ask the author

- comment certain packages and see the difference
* people's configuration
https://github.com/purcell/emacs.d Steve Purcell(purcell)
https://github.com/munen/emacs.d Alain M. Lafon(munen)
https://github.com/seagle0128/.emacs.d Vincent Zhang(seagle0128)
* lisp
https://www.gnu.org/software/emacs/manual/html_node/elisp/ emacs lisp
